<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="deploy" name="sprout">

	<!-- you can change these to match your project -->
	
	<property name="db" value="mysql"/><!-- also oracle or postgresql -->
	<property name="name" value="sprout"/>
	<property name="port" value="9000"/>
	<property name="pass" value="secret"/>
	
	<condition property="unix">
		<os family="unix"/>
	</condition>
	
	<path id="lib">
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	
	<property name="lib" refid="lib"/>
	
	<target name="check-page">
		<available property="page-exists" file="../page/build.xml"/> 
	</target>
	
	<target name="page" depends="check-page" if="page-exists">
		<ant antfile="../page/build.xml" target="build" inheritall="false"/>
		<copy file="../page/bin/page.jar" todir="lib"/>
	</target>

	<target name="check-util">
		<available property="util-exists" file="../util/build.xml"/> 
	</target>
	
	<target name="util" depends="check-util" if="util-exists">
		<ant antfile="../util/build.xml" target="build" inheritall="false"/>
		<copy file="../util/bin/util.jar" todir="lib"/>
	</target>
	
	<target name="check-memory">
		<available property="memory-exists" file="../memory/build.xml"/> 
	</target>
	
	<target name="memory" depends="check-memory" if="memory-exists">
		<ant antfile="../memory/build.xml" target="build" inheritall="false"/>
		<copy file="../memory/bin/memory.jar" todir="lib"/>
	</target>
	
	<target name="check-http">
		<available property="http-exists" file="../http/build.xml"/> 
	</target>
	
	<target name="http" depends="check-http" if="http-exists">
		<ant antfile="../http/build.xml" target="build" inheritall="false"/>
		<copy file="../http/bin/http.jar" todir="lib"/>
	</target>
	
	<target name="check-create">
		<uptodate property="create-required" targetfile="bin/${name}.jar">
			<srcfiles file="res/${name}.xml"/>
			<srcfiles file="lib/memory.jar"/>
		</uptodate>
	</target>
	
	<target name="create" depends="check-create" unless="create-required">
		<delete dir="src/se/rupy/memory" quiet="yes"/>
		<java fork="yes" classname="se.rupy.memory.Origin" classpath="lib/memory.jar">
			<arg line="${db}"/>
			<arg line="res/${name}.xml"/>
			<arg line="."/>
			<arg line="se.rupy.memory"/>
		</java>
		<!--ant target="flush"/-->
	</target>
	
	<target name="check">
		<uptodate property="required" targetfile="bin/${name}.jar">
			<srcfiles dir="src" includes="**/*.java"/>
			<srcfiles dir="res/jar" includes="**/*.*"/>
			<srcfiles file="lib/page.jar"/>
		</uptodate>
	</target>
	
	<target name="build" depends="page, util, memory, http, create, check" unless="required">
		<echo>Building (${name})</echo>
		<mkdir dir="bin"/>
		<javac srcdir="src" target="1.6" source="1.6" destdir="bin" nowarn="on" debug="on" deprecation="off" classpath="src;${lib}" encoding="UTF-8"/>
		<mkdir dir="tmp"/>
		<copy todir="tmp">
			<fileset dir="bin" includes="**/*.class"/>
		</copy>
		<java classname="Page" classpath="${lib}">
			<arg line="bin/${name}.jar"/>
			<arg line="res/jar"/>
		</java>
		<javac srcdir="res/jar" target="1.6" source="1.6" destdir="res/jar" nowarn="on" debug="on" deprecation="off" classpath="${lib};bin"/>
		<copy todir="tmp">
			<fileset dir="res/jar"/>
		</copy>
		<jar jarfile="bin/${name}.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
			</manifest>
			<fileset dir="tmp"/>
		</jar>
		<delete dir="tmp" quiet="yes"/>
	</target>

	<target name="delete">
		<delete dir="bin" quiet="no"/>
		<delete dir="res/jar/gen" quiet="no"/>
	</target>
	
	<target name="clean" depends="delete, build"/>
	
	<target name="deploy" depends="build">
		<java fork="yes" classname="se.rupy.http.Deploy" classpath="${lib}">
			<arg line="localhost:${port}"/>
			<arg line="bin/${name}.jar"/>
			<arg line="${pass}"/>
		</java>
	</target>
	
	<target name="test" depends="build">
		<java fork="yes" classname="se.rupy.sprout.User" classpath="bin/${name}.jar:${lib}"/>
	</target>
	
	<!-- requires manual flush on unix -->
	<target name="flush" unless="unix">
		<exec executable="${db}">
			<arg line='-u root -D ${name} -e "source create.sql"'/>
		</exec>
		<exec executable="${db}">
			<arg line='-u root -D ${name} -e "source alter.sql"'/>
		</exec>
	</target>
	
	<target name="doc">
		<javadoc access="public" sourcepath="src" destdir="doc" stylesheetfile="sheet.css"/>
	</target>
	
</project>